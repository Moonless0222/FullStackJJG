* {
  margin: 0;
  padding: 0;
}

#home {
  position: relative;
  border: solid rgb(75, 44, 6) 1px;
  border-radius: 50px;
  width: 300px;
  height: 600px;
  background-color: beige;
  margin: 50 auto;
  text-align: center;
}
#home img {
  width: 30%;
  border-radius: 50px;
}


/* 这里的列表通过控制器就能发现，imglist是v-for渲染出的一个个的div盒子，它的flex主要是设置图片和文字说明，所以为了设置这些功能的布局，必须在外层再套一个父级才可以 */
#home .imgFather {
  display: flex;
  flex-wrap: wrap;
}
#home .imglist {
  display: flex;
  flex-direction: column;

  align-items: center;
  justify-content: center;
}
#home .imglist img {
  width: 100px;
}

#home .htmldata{
  /* 定位与布局 */
  position: absolute;
  left: 50%;
  top: 90%;
  transform: translate(-50%, -10%);
  z-index: 1;
  /* 尺寸与边框 */
  width: 90%;
  height: 50px;
  border: none;
  border-radius: 50px;
  /* 背景样式 */
  background: linear-gradient(90deg, #00acfc, #f441a5, #ffeb3b, #065980);
  background-size: 400%;
  /* 文本样式 */
  font: bold 24px/100px "Times New Roman", Times, serif;
  color: #fff;
  line-height: 35px;
  transition: font-size 3s ease, transform 1s linear; /* 平滑过渡效果 */
}

#home .htmldata::before {
  /* 可以试试把before改为after */
  content: ""; /* content是必需的，它告诉浏览器这个伪元素是存在的应该被渲染。即使内容为空也需要这个属性。 */
  position: absolute;
  left: -10px;
  right: -10px;
  top: -10px;
  bottom: -10px;
  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);
  background-size: 400%; /* 设置背景的大小，使其比伪元素本身大，这可以创建一种背景移动的效果。 */
  filter: blur(30px);
  z-index: -1;
  opacity: 0; /* 初始透明度 */
  transition: opacity 10s ease, top 2s linear;
}

#home .htmldata:hover {
  animation: sun 5s linear infinite alternate;
  font-size: 30px;
}

#home button:active {
  transform: translate(-50%, -10%) scale(1.5); /* 同时进行定位和放大,最初只写了scale，可以删除前面的平移感受下 */
  box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);
}

#home .htmldata:hover::before {
  animation: sun 5s linear infinite alternate;
  display: inline-block;
  opacity: 0.7; /* 鼠标悬停时的透明度 */
  top: -520px;
}

@keyframes sun {
  100% {
    background-position: 400% 0;
  }
}
